swagger: "2.0"
info:
  description: "User balance storage and management. Read more at [GitHub](https://github.com/dibikhin/treasurer/blob/master/README.md)."
  version: "0.1.0"
  title: "Treasurer"
  termsOfService: "https://github.com/dibikhin/treasurer/terms/TODO"
  contact:
    email: "dibikhin@gmail.com"
  license:
    name: "Apache 2.0 TODO"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html.TODO"
host: "TODO"
basePath: "/v0"
tags:
- name: "treasurer"
  description: "Operating on account balance"
schemes:
- "http"
- "https"
externalDocs:
  description: "Find out more at Github"
  url: "https://github.com/dibikhin/treasurer"
paths:
  /treasurer/withdraw:
    post:
      tags:
      - "treasurer"
      summary: "withdraw funds"
      description: "Returns the account brief after withdrawal"
      operationId: "withdraw"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Object with parameters of withdrawal"
        required: true
        schema:
          $ref: "#/definitions/WithdrawalRequest"
      responses:
        200:
          $ref: "#/responses/TreasurerOK"
        400:
          $ref: "#/responses/ErrorBadRequest"
        404:
          $ref: "#/responses/ErrorNotFound"
        500:
          $ref: "#/responses/ErrorServerError"
  /treasurer/deposit:
    post:
      tags:
      - "treasurer"
      summary: "deposit funds"
      description: "Returns the account brief after depositing"
      operationId: "deposit"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Object with parameters of depositing"
        required: true
        schema:
          $ref: "#/definitions/DepositingRequest"
      responses:
        200:
          $ref: "#/responses/TreasurerOK"
        400:
          $ref: "#/responses/ErrorBadRequest"
        404:
          $ref: "#/responses/ErrorNotFound"
        500:
          $ref: "#/responses/ErrorServerError"
  /treasurer/transfer:
    post:
      tags:
      - "treasurer"
      summary: "transfer funds"
      description: "Returns the accounts brief after transfer"
      operationId: "transfer"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Object with parameters of transfer"
        required: true
        schema:
          $ref: "#/definitions/TransferRequest"
      responses:
        200:
          $ref: "#/responses/TreasurerTransferOK"
        400:
          $ref: "#/responses/ErrorBadRequest"
        404:
          $ref: "#/responses/ErrorNotFound"
        500:
          $ref: "#/responses/ErrorServerError"
  /treasurer/balance/{account_id}:
    get:
      tags:
      - "treasurer"
      summary: "get account balance"
      description: "Returns the account's balance"
      operationId: "balance"
      produces:
      - "application/json"
      parameters:
      - $ref: "#/parameters/account_id"
      responses:
        200:
          $ref: "#/responses/TreasurerOK"
        400:
          $ref: "#/responses/ErrorBadRequest"
        404:
          $ref: "#/responses/ErrorNotFound"
        500:
          $ref: "#/responses/ErrorServerError"
definitions:
  ErrorResponse:
    type: "object"
    required:
    - "code"
    - "title"
    - "detail"
    additionalProperties: false
    properties:
      code:
        type: "integer"
        format: "int32"
      title:
        type: "string"
      detail:
        type: "string"
  WithdrawalRequest:
    type: "object"
    required:
    - "account_id"
    - "outgoing"
    additionalProperties: false
    properties:
      account_id:
        $ref: "#/definitions/account_id"
      outgoing:
        $ref: "#/definitions/amount"
  DepositingRequest:
    type: "object"
    required:
    - "account_id"
    - "incoming"
    additionalProperties: false
    properties:
      account_id:
        $ref: "#/definitions/account_id"
      incoming:
        $ref: "#/definitions/amount"
  TransferRequest:
    type: "object"
    required:
    - "from"
    - "to"
    - "tranche"
    additionalProperties: false
    properties:
      from:
        $ref: "#/definitions/account_id"
      to:
        $ref: "#/definitions/account_id"
      tranche:
        $ref: "#/definitions/amount"
  AccountBrief:
    type: "object"
    required:
    - "id"
    - "balance"
    additionalProperties: false
    properties:
      id:
        $ref: "#/definitions/account_id"
      balance:
        $ref: "#/definitions/amount"
  TreasurerTransferResponse:
    type: "object"
    required:
    - "from"
    - "to"
    additionalProperties: false
    properties:
      from:
        $ref: "#/definitions/TreasurerResponse"
      to:
        $ref: "#/definitions/TreasurerResponse"
  TreasurerResponse:
    type: "object"
    required:
    - "account_brief"
    additionalProperties: false
    properties:
      account_brief:
        $ref: "#/definitions/AccountBrief"
  account_id:
    type: "string"
    minLength: 24
    maxLength: 24
    # format: "mongo_id"
  amount:
    type: "number"
    # format: "decimal"
    minimum: 0
    example: 1.25
parameters:
  account_id:
    name: "account_id"
    in: "path"
    required: true
    type: "string"
    minLength: 24
    maxLength: 24
    # format: "mongo_id"
responses:
  TreasurerOK:
    description: "Successful operation"
    schema:
      $ref: "#/definitions/TreasurerResponse"
    headers:
      X-Request-ID:
        type: "string"
        format: "uuid"
        description: "correlation Id"
  TreasurerTransferOK:
    description: "Successful transfer operation"
    schema:
      $ref: "#/definitions/TreasurerTransferResponse"
    headers:
      X-Request-ID:
        type: "string"
        format: "uuid"
        description: "correlation Id"
  ErrorBadRequest:
    description: "Invalid parameters"
    schema:
      $ref: "#/definitions/ErrorResponse"
    headers:
      X-Request-ID:
        type: "string"
        format: "uuid"
        description: "correlation Id"
  ErrorNotFound:
    description: "Account Not Found"
    schema:
      $ref: "#/definitions/ErrorResponse"
    headers:
      X-Request-ID:
        type: "string"
        format: "uuid"
        description: "correlation Id"
  ErrorServerError:
    description: "Internal Server Error"
    schema:
      $ref: "#/definitions/ErrorResponse"
    headers:
      X-Request-ID:
        type: "string"
        format: "uuid"
        description: "correlation Id"

# TODO 402 ?
# TODO 503 ?
# TODO threshold_amount negative|0|positive
# TODO amount positive